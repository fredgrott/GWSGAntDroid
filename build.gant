// Copyright 2013 Fred Grott-GrottWorkShop
//
//   Licensed under the Apache License, Version 2.0 (the "License");
//   you may not use this file except in compliance with the License.
//   You may obtain a copy of the License at
//
//       http://www.apache.org/licenses/LICENSE-2.0
//
//   Unless required by applicable law or agreed to in writing, software
//   distributed under the License is distributed on an "AS IS" BASIS,
//   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//   See the License for the specific language governing permissions and
//   limitations under the License.
//
//  GAnt names are in groovy syntax..ie  camelCase
//  Ant vars are mostly in camelcase with the exception of 
//  SDK set vars
//
// okay lets make this more ant like
// differences between this and GWSAntDroid:



// sets default task so we only do gant at commandline to execute
defaultTargetName = 'init'
setDefaultTarget ( defaultTargetName )
// turn on ivy tool
includeTool << gant.tools.Ivy
// set up Groovy AntBuilder() to be used throughout the script
// with the ant namespace
def ant = new AntBuilder()
ant.createProject(name: 'GWSGAntDroid')
// load the system porps into ant namespace with env prefixes
ant.property(environment:"env")
// set TSTAMP, DSTAMP,etc
ant.tstamp(){
	format(property:"buildDate",pattern:"yyyy-MM-dd'T'HHmmss")
}
//put  on ant namespace
def bootstrapAntPath = "booststrapant.path"
ant.path(id: bootstrapAntPath) {
	fileset(dir:"build.config/ant.bootstrap"){
		include(name: "jw-log4ant.jar")
		include(name: "logback-access-1.0.9.jar")
		include(name: "logback-core-1.0.9.jar")
		include(name:"logback-classic-1.0.9.jar")
	}
	fileset(dir: "build.config.dir/ant.bootstrap/dep"){
		include(name:"*/lib/*.jar")
	}
	pathelelment(location: "build.config.dir/ant.bootstrap/etc")
}
//Several ways to load our antlibs/taskdefs, using this one
// as we need to prevent namespace clashes as several anttasks from
// the android sdk overlap antxtras and the anttask from the
// android sdk do not have an antlib file

import groovy.xml.NamespaceBuilder
ant.taskdef(uri: "oja", resource: "org/jwaresoftware/antxtras/install/antlib-advanced.xml", classpath: bootstrapAntPath)
def oja = NamespaceBuilder.newInstance(ant,'oja')
ant.taskdef(uri: "emit", resource:"org/jwaresoftware/log4ant/install/antlib.xml", classpath: bootstrapAntPath)
def emit = NamesapceBuilder.newInstance(ant, 'emit')

// load property files
ant.property(file: "local.properties")
ant.property(file: 'ant.properties')
ant.property(file: 'project.properties')




// assert checkstyle and pmd files 

// ivy managed deps load them here
	
target(init : 'Setups the build') {
		
		    
}