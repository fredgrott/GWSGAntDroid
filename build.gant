// Copyright 2013 Fred Grott-GrottWorkShop
//
//   Licensed under the Apache License, Version 2.0 (the "License");
//   you may not use this file except in compliance with the License.
//   You may obtain a copy of the License at
//
//       http://www.apache.org/licenses/LICENSE-2.0
//
//   Unless required by applicable law or agreed to in writing, software
//   distributed under the License is distributed on an "AS IS" BASIS,
//   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//   See the License for the specific language governing permissions and
//   limitations under the License.
//
//  GAnt names are in groovy syntax..ie  camelCase
//  Ant vars are mostly in camelcase with the exception of 
//  SDK set vars
//
// okay lets make this more ant like
// differences between this and GWSAntDroid:
//       using log through Gant/Groovy rather than Log4Ant/Antxtras
//       ant macros done using groovy
//       less bootstrap ant taskjars..so farony using antunit


// sets default task so we only do gant at commandline to execute
defaultTargetName = 'init'
setDefaultTarget ( defaultTargetName )
// turn on ivy tool
includeTool << gant.tools.Ivy
// set up Groovy AntBuilder() to be used throughout the script
// with the ant namespace
def ant = new AntBuilder()
// load the system porps into ant namespace with env prefixes
ant.property(environment:"env")
// set TSTAMP, DSTAMP,etc
ant.tstamp(){
	format(property:"buildDate",pattern:"yyyy-MM-dd'T'HHmmss")
}
//now we put antunit on path and  put it in the ant namespace
ant.path(id: "antunit.path") {
	fileset(dir:"build.config/ant.bootstrap"){
		include(name:"antt-antunit-1.2.jar")
	}
}
import org.apache.tools.ant.taskdefs.Antlib
def url = this.class.getResource('org/apache/ant/antunit/antlib.xml')
Antlib.createAntlib(ant.antProject, url, 'antlib:org.apache.ant.antunit').execute()
// set project Name
def projectName = ant.property(name: "projectName" , value: "GWSGAntDroid")



	
	target(init : 'Setups the build') {
		// no not using new File we want FileInputStream
		// local.properties
		//    androidsdkDir
		//    keystoreDir
		//    keyStore
		//    keyAlias
		//    keystorePassword
		//    keyaliasPassword
		//
		def props = new Properties()
		new File("local.properties").withInputStream {
		   stream -> props.load(stream)
		}
		assert  props.("androidsdkDir")
		assert  props.("keystoreDir")
		assert  props.("keyStore")
		assert  props.("keystorePassword")
		assert  props.("keyAlias")
		assert  props.("keyaliasPassword")
		// project.properties
		
		new File("project.properties").withInputStream {
			ourStream -> props.load(ourStream)
		}
		assert  props.("target")
		// ant.properties, remember most of these are blank(null) in
		// the properties file as they are to be overridden to be used
		//thus no asserts on them ie:
		// versionCode
		// versionName
		// adbdeviceArg
		// aaptignoreAssets
		// aaptresourceFilter
		//
		// additional props obviously we have to assert
		
		new File("ant.properties").withInputStream {
			myStream -> props.load(myStream)
		}
		// android sdk still uses ant task so we need properties in 
		// the ant groovy way of things
		ant.property(file: "local.properties")
		ant.property(file: 'ant.properties')
		ant.property(file: 'project.properties')
		def projectName = ant.property(name: "projectName" , value: "GWSGAntDroid")
		
		    
}